{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/corona.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a553fbca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2BzT1\",\"card\":\"Cards_card__2dHXS\",\"infected\":\"Cards_infected__28QHP\",\"recovered\":\"Cards_recovered__2P9gD\",\"deaths\":\"Cards_deaths__1i0FA\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'Loading....'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n           <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.infected)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom >Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end= {confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\r\n                        <Typography variant=\"body2\">Number of active cases from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.recovered)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom >Recovered</Typography>\r\n                       <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end= {recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                 <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.deaths)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom >Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end= {deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"> {new Date(lastUpdate).toDateString()} </Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changableUrl =url;\r\n\r\n    if(country){\r\n        changableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const {data :{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changableUrl);\r\n\r\n            return {confirmed,recovered,deaths,lastUpdate};\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async()=>{\r\n    try{\r\n\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async()=>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n       \r\n        return countries.map((country)=> country.name);\r\n\r\n    } catch(error){\r\n\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\n\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed, recovered,deaths}, country}) => {\r\n    const [dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async ()=>{\r\n           setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart =(\r\n        dailyData.length\r\n            ? (\r\n                 <Line \r\n                    data={{\r\n                    labels:  dailyData.map((({date})=>date)),\r\n                    datasets: [{\r\n                        data: dailyData.map((({confirmed})=>confirmed)),\r\n                        label: 'Infected',\r\n                        borderColor:' #3333ff',\r\n                        fill: true\r\n                     },{\r\n                         data: dailyData.map((({deaths})=>deaths)),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor:' rgba(255,0,0,0.5)',\r\n                        fill: true\r\n                      }],\r\n                }}\r\n            />)  :null\r\n    )\r\n\r\n    const barChart =(\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0.5)', 'rgba(255,0,0,0.5)'],\r\n                         data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]    \r\n                }}\r\n                options={{\r\n                    legend:{display:false},\r\n                    title:{display:true , text: `current situvation in ${country}`}\r\n                }}\r\n\r\n            />\r\n        ) :null\r\n    )\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React,{ useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries]= useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async ()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    return (\r\n        <div>\r\n             <FormControl className={styles.formControl}>\r\n                 <NativeSelect defaultValue=\" \" onChange={(e)=> {handleCountryChange(e.target.value)}} >\r\n                     <option value=\"\">Global</option>\r\n                     {fetchedCountries.map((country,i)=> <option key={i} value={country}> {country} </option>)}\r\n                 </NativeSelect>\r\n             </FormControl>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/corona.9e5d4fc7.png\";","import React from 'react';\r\nimport {Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\n\r\nimport coronaImage from './images/corona.png';\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    state ={\r\n        data :{ },\r\n        country: ' '\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData= await fetchData();\r\n\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange= async (country)=>{\r\n\r\n        const fetchedData = await fetchData(country);\r\n        \r\n        this.setState({data:fetchedData, country: country});\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                    <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n                    <Cards data={data} />\r\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    <Chart data={data} country={country} />\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__xTZ5B\",\"image\":\"App_image__3S3Ni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2lQbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1YvFv\"};"],"sourceRoot":""}